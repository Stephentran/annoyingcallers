<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "ContactViewController.pickerView(UIPickerView, numberOfRowsInComponent : Int) -&gt; Int:ContactViewController.swift">
      </ContextState>
      <ContextState
         contextName = "Caller.categoryNames() -&gt; String:Caller.swift">
      </ContextState>
      <ContextState
         contextName = "DataService.(reloadExtension() -&gt; ()).(closure #1):DataService.swift">
      </ContextState>
      <ContextState
         contextName = "AppDelegate.application(UIApplication, performFetchWithCompletionHandler : (UIBackgroundFetchResult) -&gt; ()) -&gt; ():AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "window?.rootViewController as?MainViewController">
            </PersistentString>
            <PersistentString
               value = "window?.rootViewController.childViewControllers">
            </PersistentString>
            <PersistentString
               value = "window?.rootViewController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProviderDelegate.reportIncomingCall(uuid : UUID, handle : String, hasVideo : Bool, completion : (NSError?) -&gt; ()?) -&gt; ():ProviderDelegate.swift">
      </ContextState>
      <ContextState
         contextName = "NetworkManager.(requestIfReachableViaWiFi(reachability : Reachability, requestingHandler : () -&gt; (), alertWhenCellular : () -&gt; (), alertWhenNoNetwork : () -&gt; ()) -&gt; ()).(closure #1).(closure #1):NetworkManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.allowCellular">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LocalDataManager.insertCaller(caller : Caller) -&gt; Bool:LocalDataManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "LocalDataManager.sharedInstance.getPhoneNumbers()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static CategoryDataHelper.insert(item : Category) throws -&gt; Int64:CategoryDataHelper.swift">
      </ContextState>
      <ContextState
         contextName = "LocalDataManager.formatPhoneNumber(callers : [Caller]) -&gt; [Int64 : String]:LocalDataManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "caller.callerNumber!.trimmingCharacters(in: .whitespaces)">
            </PersistentString>
            <PersistentString
               value = "caller.categoryNames()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DataService.(syncUpCallers(url : String, completionHandler : (Bool) -&gt; ()) -&gt; ()).(closure #1):DataService.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.result.value">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DataService.(syncUpCallers(callerUrl : String, categoryUrl : String, completionHandler : (Bool) -&gt; ()) -&gt; ()).(closure #1):DataService.swift">
      </ContextState>
      <ContextState
         contextName = "DataService.requestToken(authUrl : String, completionHandler : () -&gt; ()) -&gt; ():DataService.swift">
         <PersistentStrings>
            <PersistentString
               value = "device.toJSON()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MainViewController.(callObserver(CXCallObserver, callChanged : CXCall) -&gt; ()).(closure #1):MainViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "callObserver.calls">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DataService.(requestToken(authUrl : String, completionHandler : () -&gt; ()) -&gt; ()).(closure #1):DataService.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.result.value">
            </PersistentString>
            <PersistentString
               value = "response.result.value?.api_request_key">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CallerCategoryDataHelper.insert(item : CallerCategory) throws -&gt; Int64:CallerCategoryDataHelper.swift">
      </ContextState>
      <ContextState
         contextName = "ContactViewController.pickerView(UIPickerView, didSelectRow : Int, inComponent : Int) -&gt; ():ContactViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "pickerData[row]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DataService.(getContacts() -&gt; [Caller]).(closure #1):DataService.swift">
      </ContextState>
      <ContextState
         contextName = "DataService.(requestCallers(url : String, completionHandler : () -&gt; ()) -&gt; ()).(closure #1):DataService.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.result.isSuccess">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CallerDataHelper.insert(item : Caller) throws -&gt; Int64:CallerDataHelper.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.categoryIds()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DataService.handleCallerResponse(callerArray : [Caller]) -&gt; ():DataService.swift">
         <PersistentStrings>
            <PersistentString
               value = "">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CallerDataHelper.findAll() throws -&gt; [Caller]?:CallerDataHelper.swift">
      </ContextState>
      <ContextState
         contextName = "ProviderDelegate.(reportIncomingCall(uuid : UUID, handle : String, hasVideo : Bool, completion : (NSError?) -&gt; ()?) -&gt; ()).(closure #1):ProviderDelegate.swift">
      </ContextState>
      <ContextState
         contextName = "ContactViewController.validationFailed([(Validatable, ValidationError)]) -&gt; ():ContactViewController.swift">
      </ContextState>
      <ContextState
         contextName = "CallerCategoryDataHelper.findBy(callerId : Int64) throws -&gt; [CallerCategory]:CallerCategoryDataHelper.swift">
         <PersistentStrings>
            <PersistentString
               value = "item[CallerCategoryDataHelper.categoryId]">
            </PersistentString>
            <PersistentString
               value = "item[CallerCategoryDataHelper.assignType]">
            </PersistentString>
            <PersistentString
               value = "item[CallerCategoryDataHelper.assignedDate]">
            </PersistentString>
            <PersistentString
               value = "item[CallerCategoryDataHelper.categoryName]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "JSONStringArrayEncoding.encode(URLRequestConvertible, with : [String : Any]?) throws -&gt; URLRequest:JSONStringArrayEncoding.swift">
      </ContextState>
      <ContextState
         contextName = "DataManager.getPhoneNumbers() -&gt; [Int64 : String]:DataManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "Int64(contact.phoneNumber).toString()">
            </PersistentString>
            <PersistentString
               value = "String(describing: Int64(contact.phoneNumber)!)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DataService.postCaller(url : String, caller : Caller, completionHandler : () -&gt; ()) -&gt; ():DataService.swift">
         <PersistentStrings>
            <PersistentString
               value = "json.toString()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SQLiteDataStore.createTables() throws -&gt; ():SQLiteDataStore.swift">
      </ContextState>
      <ContextState
         contextName = "Common.formatDate(date : Date) -&gt; String:Common.swift">
         <PersistentStrings>
            <PersistentString
               value = "Configuration.sharedInstance.getLocale()">
            </PersistentString>
            <PersistentString
               value = "usDateFormat.string(from: date)">
            </PersistentString>
            <PersistentString
               value = "usDateFormat.locale">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DataService.(requestToken(completionHandler : () -&gt; ()) -&gt; ()).(closure #1):DataService.swift">
         <PersistentStrings>
            <PersistentString
               value = "response.result.value">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MainViewController.callObserver(CXCallObserver, callChanged : CXCall) -&gt; ():MainViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "callObserver.calls">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ContactTableViewController.prepare(for : UIStoryboardSegue, sender : Any?) -&gt; ():ContactTableViewController.swift">
      </ContextState>
      <ContextState
         contextName = "NetworkManager.requestIfReachableViaWiFi(reachability : Reachability, allowCell : Bool, requestingHandler : ((Bool) -&gt; ()) -&gt; (), completionHandler : (Bool) -&gt; ()) -&gt; ():NetworkManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "reachability.isReachable">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LocalDataManager.getBlockedPhoneNumbers() -&gt; [Int64 : String]:LocalDataManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "CALLER_DATA_HELPER.findAll()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DataService.(getContacts() -&gt; [Contact]).(closure #1):DataService.swift">
         <PersistentStrings>
            <PersistentString
               value = "response">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Caller.mapping(map : Map) -&gt; ():Caller.swift">
      </ContextState>
      <ContextState
         contextName = "ContactTableViewController.(loadContacts() -&gt; ()).(closure #1):ContactTableViewController.swift">
      </ContextState>
      <ContextState
         contextName = "DataService.(postCallers(url : String, completionHandler : () -&gt; ()) -&gt; ()).(closure #1):DataService.swift">
      </ContextState>
      <ContextState
         contextName = "DataService.(requestCategories(url : String, completionHandler : () -&gt; ()) -&gt; ()).(closure #1):DataService.swift">
      </ContextState>
      <ContextState
         contextName = "CallerDataHelper.delete(item : Caller) throws -&gt; ():CallerDataHelper.swift">
         <PersistentStrings>
            <PersistentString
               value = "table.filter(CallerDataHelper.callerId == id).exist()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DataService.getLoadedPhoneNumbers() -&gt; [Int64 : String]:DataService.swift">
      </ContextState>
      <ContextState
         contextName = "static ProviderDelegate.providerConfiguration.getter:ProviderDelegate.swift">
      </ContextState>
   </ContextStates>
</VariablesViewState>
